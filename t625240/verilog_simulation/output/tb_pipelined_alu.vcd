$date
	Tue Apr  1 09:33:57 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_pipelined_alu $end
$var wire 1 ! underflow $end
$var wire 16 " result [15:0] $end
$var wire 1 # overflow $end
$var wire 1 $ is_less $end
$var wire 1 % is_equal $end
$var wire 1 & invalid_op $end
$var parameter 32 ' WIDTH $end
$var reg 16 ( a [15:0] $end
$var reg 16 ) b [15:0] $end
$var reg 1 * clk $end
$var reg 4 + op [3:0] $end
$var reg 1 , rst $end
$scope module dut $end
$var wire 16 - a [15:0] $end
$var wire 16 . b [15:0] $end
$var wire 1 * clk $end
$var wire 4 / op [3:0] $end
$var wire 1 , rst $end
$var parameter 32 0 WIDTH $end
$var reg 17 1 extended [16:0] $end
$var reg 1 & invalid_op $end
$var reg 1 % is_equal $end
$var reg 1 $ is_less $end
$var reg 1 # overflow $end
$var reg 16 2 result [15:0] $end
$var reg 1 ! underflow $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10000 0
b10000 '
$end
#0
$dumpvars
b0 2
bx 1
b0 /
b0 .
b0 -
1,
b0 +
0*
b0 )
b0 (
0&
0%
0$
0#
b0 "
0!
$end
#5
1*
#10
0*
b11001000 )
b11001000 .
b1100100 (
b1100100 -
0,
#15
b100101100 "
b100101100 2
b100101100 1
1*
#20
0*
b1 +
b1 /
b1010000 )
b1010000 .
b110010 (
b110010 -
#25
1!
b1111111111100010 "
b1111111111100010 2
b11111111111100010 1
1*
#30
0*
b10 +
b10 /
b111100001111 )
b111100001111 .
b1111111100000000 (
b1111111100000000 -
#35
b111100000000 "
b111100000000 2
0!
1*
#40
0*
b11 +
b11 /
b101101001011010 )
b101101001011010 .
b1010010110100101 (
b1010010110100101 -
#45
b1111111111111111 "
b1111111111111111 2
1*
#50
0*
b100 +
b100 /
b1111111111111111 )
b1111111111111111 .
b1010101010101010 (
b1010101010101010 -
#55
b101010101010101 "
b101010101010101 2
1*
#60
0*
b101 +
b101 /
b1111000011110000 (
b1111000011110000 -
#65
b111100001111 "
b111100001111 2
1*
#70
0*
b110 +
b110 /
b1 (
b1 -
#75
b10 "
b10 2
1*
#80
0*
b111 +
b111 /
b1000000000000000 (
b1000000000000000 -
#85
b100000000000000 "
b100000000000000 2
1*
#90
0*
b1000 +
b1000 /
b10011010010 )
b10011010010 .
b10011010010 (
b10011010010 -
#95
1%
1*
#100
0*
b1001 +
b1001 /
b110010 )
b110010 .
b1010 (
b1010 -
#105
1$
0%
1*
#110
0*
b1111 +
b1111 /
#115
1&
b0 "
b0 2
0$
1*
#120
0*
